escrever ctor e da tab tab = cria um construtor automaticamente
escreve prop e da tab tab = cria uma propriedade automaticamentes

----------------------

-
---------------------

OPERADOR TERNARIO= ?

------------------------


------------------------------

----------------------------

Tipos de dados de variaveis:
https://www.tutorialspoint.com/csharp/csharp_data_types.htm

---------------


------------------
esses operadores atribuem e:
+= = adiciona
*= = multiplica
-= = subtrai

exemplo
C = C + 5;
é igual a
C += 5;
-------------------------



--------------------------



--------------------------------



-------------------------------------


-----------------------------------------



--------------------------------------------

Environment.Exit(0); encerra o programa.
Console.Clear(); limpa o console.

------------------------------------------------

FOREACH é usado principalmente com arrays, onde ele faz um for para cada elemento do array e joga o valor para dentro da variavel sem usar um contador de loop.

foreach(int valor in array)
{
	Console.WriteLine(valor);
}
em alguns casos pode ser uma desvantagem não ter um contador.
----------------------------------------------------

----------------------------------------------------



----------------------------------------------------


------------------------------------------------------
comentarios:
// = comenta uma unica linha
/* comentario */ = comenta multiplas linhas

-----------------------------------------------


----------------------------------------------
---------------------------------------------

-------------------------------------------



-----------------------------------------------




-----------------------------------------------
verificar no projeto: TuplasTernarioEDesconstrucao
tuplas
ternario
desconstrutor
----------------------------------------------



---------------------------------------------


------------------------------------------------

Tipos Especiais, verificar no projeto: TiposEspeciais

tipos anulaveis:
bool? = variavel nullable, no caso do bool aceita receber null ao inves de apenas true e false, e altera seu funcionamento, onde antes em um if era só colocar o nome da variavel que ja pegava se era true ou false, e agora é nessessario colocar nomeDaVariavel.Value para simplesmente pegar se é true ou false. E é bom conferir com .HasValue para ver se não é null para evitar erros.

tipos anonimos

tipo dinâmico

classes genericas

metodos de extensão


---------------------------------------------------



--------------------------------------------------


